quarkus.devservices.enabled=false

# Kafka topic Name
kafka.topic.name=${TOPIC_NAME:vale-parauapebas-topic}

# Kafka brokers
%prod.camel.component.kafka.brokers=${KAFKA_BOOTSTRAP_URL:amq-kafka-bootstrap-amq-streams-dev.apps.pgjwbjq2.eastus2.aroapp.io:443}
# Kafka instance without Authentication
camel.component.kafka.brokers=${KAFKA_BOOTSTRAP_URL:amq-kafka-bootstrap-amq-streams-dev.apps.pgjwbjq2.eastus2.aroapp.io:443}

# How often should the messages be generated and pushed to Kafka Topic
timer.period = ${TIMER_PERIODO:1000}
timer.delay = ${TIMER_PERIODO:1000}

# truststore=/Users/ssa/arquivos/redhat/git/quarkus-camel-kafka/client.truststore.jks
# truststore.password=asdfgh

# camel.component.kafka.configuration.security-protocol=SSL
# camel.component.kafka.configuration.ssl-truststore-location=/home/sanderson/certs/client.truststore.jks
# camel.component.kafka.configuration.ssl-truststore-password=asdfgh


###################################
# OpenShift specific
###################################
# secrets
#quarkus.kubernetes-config.enabled=true
#getting secrets while deploying to kubernetes
#quarkus.kubernetes-config.namespace=test
#quarkus.kubernetes-config.secrets.enabled=true
#quarkus.kubernetes-config.secrets=camel-kafka

# creating container for openshift
#quarkus.container-image.build=true
#quarkus.kubernetes.deployment-target=openshift

# OpenShift
#quarkus.openshift.image-pull-policy=IfNotPresent

# Uncomment to set resource limits
#quarkus.openshift.resources.requests.memory=64Mi
#quarkus.openshift.resources.requests.cpu=250m
#quarkus.openshift.resources.limits.memory=512Mi
#quarkus.openshift.resources.limits.cpu=1000m